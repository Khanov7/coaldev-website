# Generated by Django 2.0.6 on 2018-11-22 18:23

import Employee.models
import datetime
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_title', models.CharField(max_length=20)),
                ('application_date', models.DateField()),
                ('number_of_days', models.PositiveIntegerField()),
                ('reason', models.CharField(max_length=1000)),
                ('status', models.IntegerField(choices=[(1, 'approved'), (2, 'pending'), (3, 'Rejected')])),
            ],
        ),
        migrations.CreateModel(
            name='Attendence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('att_type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('cert_id', models.AutoField(primary_key=True, serialize=False)),
                ('cert_name', models.CharField(max_length=50)),
                ('cert_logo', models.FileField(blank=True, default=None, null=True, upload_to='certification')),
                ('cert_organization_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('desig_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=60, unique=True)),
                ('job_discription', models.CharField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeCertification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Employee.Certification')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeDesignation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desig', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Employee.Designation')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_title', models.CharField(max_length=30)),
                ('event_date', models.DateField()),
                ('event_start_time', models.TimeField()),
                ('event_end_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('middle_name', models.CharField(blank=True, max_length=20, null=True)),
                ('basic_salary', models.FloatField(default=1)),
                ('emp_img', models.FileField(default=None, upload_to='employees')),
                ('leaves_allowed', models.IntegerField(default=25)),
                ('leave_balance', models.IntegerField(default=25)),
                ('leave_count', models.IntegerField(default=0)),
                ('certification', models.ManyToManyField(blank=True, default=None, null=True, through='Employee.EmployeeCertification', to='Employee.Certification')),
                ('designation', models.ManyToManyField(blank=True, default=None, through='Employee.EmployeeDesignation', to='Employee.Designation')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', Employee.models.EmployeeManager()),
            ],
        ),
        migrations.AddField(
            model_name='payment',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employeedesignation',
            name='emp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employeecertification',
            name='emp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attendence',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attendence',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Employee.Event'),
        ),
        migrations.AddField(
            model_name='application',
            name='applicant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='employeedesignation',
            unique_together={('emp', 'desig')},
        ),
        migrations.AlterUniqueTogether(
            name='employeecertification',
            unique_together={('certi', 'emp')},
        ),
        migrations.AlterUniqueTogether(
            name='attendence',
            unique_together={('event', 'employee')},
        ),
    ]
